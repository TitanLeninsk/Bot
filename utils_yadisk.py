import yadisk
import logging
import os
from dotenv import load_dotenv
load_dotenv()

YANDEX_TOKEN = os.getenv("YANDEX_TOKEN")
y = yadisk.YaDisk(token=YANDEX_TOKEN)

def upload_file_yadisk(local_path: str, remote_path: str):
    try:
        folder = os.path.dirname(remote_path)
        if not y.exists(folder):
            y.mkdir(folder)
            logging.info(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ {folder} –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ")

        y.upload(local_path, remote_path, overwrite=True)
        logging.info(f"‚úÖ –§–∞–π–ª {local_path} –∑–∞–≥—Ä—É–∂–µ–Ω –≤ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫ –∫–∞–∫ {remote_path}")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫: {e}")


def download_file_yadisk(remote_path: str, local_path: str) -> bool:
    try:
        if y.exists(remote_path):
            y.download(remote_path, local_path)
            logging.info(f"‚úÖ –§–∞–π–ª {remote_path} —Å–∫–∞—á–∞–Ω —Å –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞ –≤ {local_path}")
            return True
        else:
            logging.warning(f"‚ö†Ô∏è –§–∞–π–ª {remote_path} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ")
            return False
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞: {e}")
        return False
